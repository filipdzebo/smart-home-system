// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHomeSystem.Context;

namespace SmartHomeSystem.Migrations
{
    [DbContext(typeof(SmartHomeSystemDBContext))]
    partial class SmartHomeSystemDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartHomeSystem.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DeviceHomeHomeId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DeviceId");

                    b.HasIndex("DeviceHomeHomeId");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.DeviceType", b =>
                {
                    b.Property<int>("DeviceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DeviceTypeId");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Home", b =>
                {
                    b.Property<int>("HomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OwnerUserId")
                        .HasColumnType("int");

                    b.HasKey("HomeId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.NumberParameter", b =>
                {
                    b.Property<int>("NumberParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DefaultValue")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MaxValue")
                        .HasColumnType("int");

                    b.Property<int>("MinValue")
                        .HasColumnType("int");

                    b.HasKey("NumberParameterId");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("NumberParameters");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.StringParameter", b =>
                {
                    b.Property<int>("StringParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("text");

                    b.Property<int?>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MaxValue")
                        .HasColumnType("text");

                    b.Property<string>("MinValue")
                        .HasColumnType("text");

                    b.HasKey("StringParameterId");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("StringParameters");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.UserHome", b =>
                {
                    b.Property<int>("UserHomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserHomeId");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHomes");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Device", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Home", "DeviceHome")
                        .WithMany("DevicesInHome")
                        .HasForeignKey("DeviceHomeHomeId");

                    b.HasOne("SmartHomeSystem.Models.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.Home", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.User", "Owner")
                        .WithMany("Home")
                        .HasForeignKey("OwnerUserId");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.NumberParameter", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.DeviceType", "DeviceType")
                        .WithMany("NumberParametersForDeviceType")
                        .HasForeignKey("DeviceTypeId");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.StringParameter", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.DeviceType", "DeviceType")
                        .WithMany("StringParametersForDeviceType")
                        .HasForeignKey("DeviceTypeId");
                });

            modelBuilder.Entity("SmartHomeSystem.Models.UserHome", b =>
                {
                    b.HasOne("SmartHomeSystem.Models.Home", null)
                        .WithMany("UserHome")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeSystem.Models.User", null)
                        .WithMany("UserHome")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
